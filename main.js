(()=>{"use strict";const e=function(){let e,t,n;const r=document.querySelector(".projects-lists"),s=document.querySelector(".main-content"),o=document.querySelector(".project-title"),a=document.querySelector(".project-description"),l=document.querySelector(".project-due"),d=document.querySelector(".priority"),i=document.querySelector(".task-button"),u=document.querySelector(".all-tasks"),p=(document.querySelector(".individual-task"),function(e){c.myProjectArray[e]===n&&(s.style.display="none"),c.myProjectArray.splice(e,1)});return r.addEventListener("click",(t=>{if(t.target.classList.contains("project")||t.target.classList.contains("deleteSVG")||t.target.classList.contains("editSVG")){let c=t.target.closest(".project-display");e=Array.from(c.parentNode.children).indexOf(c)}})),r.addEventListener("click",(t=>{if(t.target.classList.contains("deleteSVG")){const c=t.target.closest(".project-display");p(e),r.removeChild(c)}})),r.addEventListener("click",(t=>{t.target.classList.contains("project")&&(s.style.display="flex",n=c.myProjectArray[e],o.textContent=n.title,a.textContent=n.description,l.textContent=n.date,d.textContent=n.priority)})),u.addEventListener("click",(e=>{if(e.target.classList.contains("task-checkbox")||e.target.classList.contains("task-input")||e.target.classList.contains("deleteSVG")){let c=e.target.closest(".individual-task");t=Array.from(c.parentNode.children).indexOf(c),console.log(t)}})),i.addEventListener("click",(()=>{!function(){const e=document.createElement("div");e.classList.add("individual-task"),u.appendChild(e);const t=document.createElement("div");t.classList.add("task-checkbox-div"),e.appendChild(t),t.innerHTML='<label for="task1-checkbox"></label><input type="checkbox" class = "task-checkbox" id="task1-checkbox" name="checkbox">';const c=document.createElement("div");c.classList.add("task-input-div"),e.appendChild(c),c.innerHTML='<label for="task1-input"></label><input type="text" class="task-input" id="task1-input" name="task" required>';const n=document.createElement("div");n.classList.add("task-delete-button"),e.appendChild(n),n.innerHTML='<svg class="deleteSVG" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path class="deleteSVG" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" /></svg>',n.addEventListener("click",(()=>{u.removeChild(e)}))}(),document.querySelectorAll(".task-input").forEach((n=>{n.addEventListener("change",(()=>{c.myProjectArray[e].tasks[t]=n.value,console.log(c.myProjectArray)}))}))})),{createProjectDiv:function(){const e=document.createElement("button"),t=document.createElement("button"),n=document.createElement("div"),s=document.createElement("div");n.classList.add("project-display"),r.appendChild(n),s.classList.add("project"),s.textContent=c.myProjectArray[c.myProjectArray.length-1].title,n.appendChild(s),e.classList.add("delete-project-button"),e.innerHTML='<svg class="deleteSVG" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path class="deleteSVG" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" /></svg>',n.appendChild(e),t.classList.add("edit-project-button"),t.innerHTML='<svg class="editSVG" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path class="editSVG" d="M5,3C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19H5V5H12V3H5M17.78,4C17.61,4 17.43,4.07 17.3,4.2L16.08,5.41L18.58,7.91L19.8,6.7C20.06,6.44 20.06,6 19.8,5.75L18.25,4.2C18.12,4.07 17.95,4 17.78,4M15.37,6.12L8,13.5V16H10.5L17.87,8.62L15.37,6.12Z" /></svg>',n.appendChild(t)},deleteProject:p}}(),t=function(){const t=document.querySelector(".add-project"),c=document.querySelector(".add-project-form"),n=document.querySelector("#title"),r=document.querySelector("#description"),s=document.querySelector("#date"),o=document.querySelectorAll(".project-priority-button"),a=document.querySelector(".add"),l=document.querySelector(".cancel");let d=[],i="";return{addProject:t,displayForm:function(){t.style.display="flex",a.addEventListener("click",(o=>{if(""!=n.value){o.preventDefault();const a=function(e,t,c,n){return{title:e,description:t,date:c,priority:n,tasks:[]}}(n.value,r.value,s.value,i);d.push(a),e.createProjectDiv(),console.log(d),t.style.display="none",c.reset()}})),l.addEventListener("click",(e=>{e.preventDefault(),t.style.display="none",c.reset()})),t.addEventListener("click",(e=>{e.target==t&&(t.style.display="none")})),o.forEach((e=>{e.addEventListener("click",(t=>{t.preventDefault(),i=e.textContent,console.log(i)}))}))},myProjectArray:d}}(),c=t,n=document.querySelector(".project-button");document.querySelector(".projects-lists"),n.addEventListener("click",c.displayForm)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,