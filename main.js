(()=>{"use strict";const e=function(){let e,t;const c=document.querySelector(".projects-lists"),o=document.querySelector(".main-content"),n=document.querySelector(".project-title"),s=document.querySelector(".project-description"),l=document.querySelector(".project-due"),d=document.querySelector(".priority"),i=(document.querySelector(".tasks-area"),function(e){r.myProjectArray[e]===t&&(o.style.display="none"),r.myProjectArray.splice(e,1)});return c.addEventListener("click",(t=>{if(t.target.classList.contains("project")||t.target.classList.contains("deleteSVG")||t.target.classList.contains("editSVG")){let r=t.target.closest(".project-display");e=Array.from(r.parentNode.children).indexOf(r)}})),c.addEventListener("click",(t=>{if(t.target.classList.contains("deleteSVG")){const o=t.target.closest(".project-display");i(e),c.removeChild(o),console.log(r.myProjectArray)}})),c.addEventListener("click",(c=>{c.target.classList.contains("project")&&(o.style.display="flex",t=r.myProjectArray[e],n.textContent=t.title,s.textContent=t.description,l.textContent=t.date,d.textContent=t.priority)})),{createProjectDiv:function(){const e=document.createElement("button"),t=document.createElement("button"),o=document.createElement("div"),n=document.createElement("div");o.classList.add("project-display"),c.appendChild(o),n.classList.add("project"),n.textContent=r.myProjectArray[r.myProjectArray.length-1].title,o.appendChild(n),e.classList.add("delete-project-button"),e.innerHTML='<svg class="deleteSVG" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path class="deleteSVG" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" /></svg>',o.appendChild(e),t.classList.add("edit-project-button"),t.innerHTML='<svg class="editSVG" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path class="editSVG" d="M5,3C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19H5V5H12V3H5M17.78,4C17.61,4 17.43,4.07 17.3,4.2L16.08,5.41L18.58,7.91L19.8,6.7C20.06,6.44 20.06,6 19.8,5.75L18.25,4.2C18.12,4.07 17.95,4 17.78,4M15.37,6.12L8,13.5V16H10.5L17.87,8.62L15.37,6.12Z" /></svg>',o.appendChild(t)},deleteProject:i}}(),t=function(){const t=document.querySelector(".add-project"),r=document.querySelector("form"),c=document.querySelector("#title"),o=document.querySelector("#description"),n=document.querySelector("#date"),s=document.querySelectorAll(".project-priority-button"),l=document.querySelector(".add"),d=document.querySelector(".cancel");let i=[],a="";return{addProject:t,displayForm:function(){t.style.display="flex",l.addEventListener("click",(s=>{if(""!=c.value){s.preventDefault();const l=function(e,t,r,c){return{title:e,description:t,date:r,priority:c,tasks:[]}}(c.value,o.value,n.value,a);i.push(l),e.createProjectDiv(),console.log(i),t.style.display="none",r.reset()}})),d.addEventListener("click",(e=>{e.preventDefault(),t.style.display="none",r.reset()})),t.addEventListener("click",(e=>{e.target==t&&(t.style.display="none")})),s.forEach((e=>{e.addEventListener("click",(t=>{t.preventDefault(),a=e.textContent,console.log(a)}))}))},myProjectArray:i}}(),r=t,c=document.querySelector(".project-button");document.querySelector(".projects-lists"),c.addEventListener("click",r.displayForm)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,