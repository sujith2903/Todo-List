(()=>{"use strict";const e=function(){let e,t,n;const s=document.querySelector(".projects-lists"),o=document.querySelector(".main-content"),r=document.querySelector(".project-title"),a=document.querySelector(".project-description"),l=document.querySelector(".project-due"),i=document.querySelector(".priority"),d=document.querySelector(".task-button"),u=document.querySelector(".all-tasks"),p=function(e){c.myProjectArray[e]===n&&(o.style.display="none"),c.myProjectArray.splice(e,1)},y=function(){const e=document.createElement("div");e.classList.add("individual-task"),u.appendChild(e);const t=document.createElement("div");t.classList.add("task-checkbox-div"),e.appendChild(t),t.innerHTML='<label for="task1-checkbox"></label><input type="checkbox" class = "task-checkbox" id="task1-checkbox" name="checkbox">';const c=document.createElement("div");c.classList.add("task-input-div"),e.appendChild(c),c.innerHTML='<label for="task1-input"></label><input type="text" class="task-input" id="task1-input" name="task" required>';const n=document.createElement("div");n.classList.add("task-delete-button"),e.appendChild(n),n.innerHTML='<svg class="deleteSVG" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path class="deleteSVG" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" /></svg>'},m=function(e,t){return null==t&&(t=!1),{taskName:e,isCompleted:t}};return s.addEventListener("click",(t=>{if(t.target.classList.contains("project")||t.target.classList.contains("deleteSVG")||t.target.classList.contains("editSVG")){let c=t.target.closest(".project-display");e=Array.from(c.parentNode.children).indexOf(c)}})),s.addEventListener("click",(t=>{if(t.target.classList.contains("deleteSVG")){const c=t.target.closest(".project-display");p(e),s.removeChild(c)}})),s.addEventListener("click",(t=>{t.target.classList.contains("project")&&(o.style.display="flex",n=c.myProjectArray[e],console.log(n),r.textContent=n.title,a.textContent=n.description,l.textContent=n.date,i.textContent=n.priority,document.querySelectorAll(".individual-task").forEach((e=>{u.removeChild(e)})),function(){for(let e=0;e<n.tasks.length;e++){y();const t=document.querySelectorAll(".task-input"),c=document.querySelectorAll(".task-checkbox");t[e].value=n.tasks[e].taskName,c[e].checked=n.tasks[e].isCompleted}}())})),u.addEventListener("click",(e=>{if(e.target.classList.contains("task-checkbox")||e.target.classList.contains("task-input")||e.target.classList.contains("deleteSVG")){let c=e.target.closest(".individual-task");t=Array.from(c.parentNode.children).indexOf(c)}})),d.addEventListener("click",(()=>{let n,s;y(),document.querySelectorAll(".task-input").forEach((o=>{const r=o.closest(".individual-task").querySelector(".task-checkbox");o.addEventListener("change",(()=>{n=o.value;const r=m(n,s);c.myProjectArray[e].tasks[t]=r})),r.addEventListener("change",(()=>{s=r.checked;const o=m(n,s);c.myProjectArray[e].tasks[t]=o}))}))})),u.addEventListener("click",(n=>{if(n.target.classList.contains("deleteSVG")){const s=n.target.closest(".individual-task");c.myProjectArray[e].tasks.splice(t,1),u.removeChild(s)}})),{createProjectDiv:function(){const e=document.createElement("button"),t=document.createElement("button"),n=document.createElement("div"),o=document.createElement("div");n.classList.add("project-display"),s.appendChild(n),o.classList.add("project"),o.textContent=c.myProjectArray[c.myProjectArray.length-1].title,n.appendChild(o),e.classList.add("delete-project-button"),e.innerHTML='<svg class="deleteSVG" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path class="deleteSVG" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" /></svg>',n.appendChild(e),t.classList.add("edit-project-button"),t.innerHTML='<svg class="editSVG" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path class="editSVG" d="M5,3C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19H5V5H12V3H5M17.78,4C17.61,4 17.43,4.07 17.3,4.2L16.08,5.41L18.58,7.91L19.8,6.7C20.06,6.44 20.06,6 19.8,5.75L18.25,4.2C18.12,4.07 17.95,4 17.78,4M15.37,6.12L8,13.5V16H10.5L17.87,8.62L15.37,6.12Z" /></svg>',n.appendChild(t)},deleteProject:p}}(),t=function(){const t=document.querySelector(".add-project"),c=document.querySelector(".add-project-form"),n=document.querySelector("#title"),s=document.querySelector("#description"),o=document.querySelector("#date"),r=document.querySelectorAll(".project-priority-button"),a=document.querySelector(".add"),l=document.querySelector(".cancel");let i=[],d="Low";return{addProject:t,displayForm:function(){t.style.display="flex",a.addEventListener("click",(r=>{if(""!=n.value){r.preventDefault();const a=function(e,t,c,n){return{title:e,description:t,date:c,priority:n,tasks:[]}}(n.value,s.value,o.value,d);i.push(a),e.createProjectDiv(),console.log(i),t.style.display="none",d="Low",c.reset()}})),l.addEventListener("click",(e=>{e.preventDefault(),t.style.display="none",c.reset()})),t.addEventListener("click",(e=>{e.target==t&&(t.style.display="none")})),r.forEach((e=>{e.addEventListener("click",(t=>{t.preventDefault(),d=e.textContent,console.log(d)}))}))},myProjectArray:i}}(),c=t,n=document.querySelector(".project-button");document.querySelector(".projects-lists"),n.addEventListener("click",c.displayForm)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,